# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/06_merge_sort.ipynb (unless otherwise specified).

__all__ = ['merge_sort']

# Cell

def _merge_sort(a, t, left, right):
    if left >= right:
        return a
    mid = (left + right)//2
    _merge_sort(a, t, left, mid)
    _merge_sort(a, t, mid+1, right)
    _merge(a, t, left, mid+1, right)


def _merge(a, t, left, right, right_end):
    s = left
    left_end = right - 1
    i = left

    while left <= left_end and right <= right_end:
        if a[left] <= a[right]:
            t[i] = a[left]
            i += 1
            left += 1
        else:
            t[i] = a[right]
            i += 1
            right += 1

    while left <= left_end:
        t[i] = a[left]
        i += 1
        left += 1

    while right <= right_end:
        t[i] = a[right]
        i += 1
        right += 1

    for i in range(s, right_end+1):
        a[i] = t[i]


def merge_sort(a):
    if not a:
        return a

    sz = len(a)
    t = [None]*sz
    _merge_sort(a, t, 0, sz-1)
    return a
