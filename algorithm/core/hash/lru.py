# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/09_lru_cache.ipynb (unless otherwise specified).

__all__ = ['LRUCache']

# Cell
from collections import OrderedDict


class LRUCache:
    def __init__(self, capacity: int):
        self.cache = OrderedDict()
        self.capacity = capacity


    def get(self, key, default=None):
            if key not in self.cache:
                return default

            self.cache.move_to_end(key)
            return self.cache.get(key)


    def put(self, key, value):
        self.cache[key] = value
        self.cache.move_to_end(key)
        if len(self.cache) > self.capacity:
            self.cache.popitem(last=False)